SASS/SCSS:
Sass stands for Systematically Awesome Style Sheets or Syntactically Awesome Stylesheet.
It is a CSS pre-processor. It is an extension of CSS that is used to add power and elegance to the basic 
language. It facilitates you to add variables, nested rules, mixins, inline imports, inheritance and more, 
all with fully CSS-compatible syntax.

Sass is more stable and powerful CSS extension language that describes style of document cleanly and 
structurally. It is very useful to handle large style sheets by keeping them well organized and running 
quickly small style sheets.

History:
Sass was initially designed by Hampton Catlin and developed by Natalie Weizenbaum in 2006. After the initial 
development, Natalie Weizenbaum and Chris Eppstein continue with its initial version and extend Sass with 
SassScript, a simple scripting language used in Sass files.

Features of Sass
Sass is fully CSS-compatible.
It is more stable, powerful and elegant than CSS.
It is based on JavaScript and is superset of CSS.
It has its own syntax and compiles to readable CSS.
It is an open-source pre processor that is interpreted into CSS.
It supports language extensions such as variables, nesting, and mixins.
It provides many useful functions for manipulating colors and other values.
It provides many advanced features like control directives for libraries.
It provides well-formatted, customizable output.

Why use Sass
Following are some reasons behind using Sass:

Sass is a pre-processing language and it has its own syntax for CSS.
It is easy, short and clean in a programming construct.
It has some features that are used for creating awesome style sheets and facilitates writing code more efficiently and easy to maintain.
It contains all the features of CSS along with some advance features.
It provides document style presentation better than flat CSS.
It facilitates reusability methods, logic statements and some of the built in functions like color manipulation, mathematics and parameter lists.
It facilitates you to keep your responsive design project more organized.
You don't need to repeat similar CSS again and again in your project.

